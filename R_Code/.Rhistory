#Retrieve information from data dictionary
var1 <- df[var.name]
var.type <- subset(df.datadict,name==var.name)$measurement_type
unit.type <- subset(df.datadict,name==var.name)$measurement_unit
#Retrieve information from data dictionary
var1 <- df[var.name]
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
df.datadict
var.name <- 'gasoline'
unit.type.new <- 'gallon'
#Retrieve information from data dictionary
var1 <- df[var.name]
var.type <- subset(df.datadict,name==var.name)$measurement_type
var1 <- df[var.name]
sort(colnames(df))
var.name <- 'gallon_of_gasoline'
#Retrieve information from data dictionary
var1 <- df[var.name]
var.type <- subset(df.datadict,name==var.name)$measurement_type
unit.type <- subset(df.datadict,name==var.name)$measurement_unit
df.datadict <- read.csv(paste(dir,'data_dictionary.csv',sep='\\'))
colnames(df)
df.datadict
dir <- 'C:\\Users\\Thoma\\OneDrive\\Desktop\\portoflio_project_1\\data'
df <- read.csv(paste(dir,'main_data_file.csv',sep='\\'))
df.datadict <- read.csv(paste(dir,'data_dictionary.csv',sep='\\'))
df
colnames(df)
df.datadict
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
var1 <- variable.unit.converter(df,df.datadict,'retail','day')
var2 <- variable.unit.converter(df,df.datadict,'financial','day')
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year','Retail','Mining')
plot_ly(data=df.display,x=~year,mode='lines+markers') %>%
add_trace(y = ~Retail) %>%
add_trace(y = ~Mining)
df.display
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
base_var
plot_ly(data=df.display,x=~year,mode='lines+markers') %>%
plot_ly(data=df.display,x=~year,mode='lines+markers') %>%
add_trace(y = ~Mining) %>%
xaxis = list(title = 'Year'),
plot_ly(data=df.display,x=~year,mode='lines+markers') %>%
add_trace(y = ~Retail) %>%
add_trace(y = ~Mining) %>%
layout(legend=list(title=list(text='Payer Gender')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
data("tips")
plot_ly(data=df.display,x=~year, type = 'scatter', mode='lines+markers') %>%
add_trace(y = ~Retail) %>%
add_trace(y = ~Mining) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
plot_ly(data=df.display,x=~year,mode='lines+markers') %>%
add_trace(y = ~Retail) %>%
add_trace(y = ~Mining) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
df.display
df.display
melt(df.display, id.vars='year',variable.name=c('Retail','Mining')
melt(df.display, id.vars='year',variable.name=c('Retail','Mining'))
melt(df.display, id.vars=c('year'),variable.name=c('Retail','Mining'))
data.table::melt(df.display, id.vars=c('year'),variable.name=c('Retail','Mining'))
data.table::melt(setDT(df.display), id.vars=c('year'),variable.name=c('Retail','Mining'))
data.table::melt(setDT(df.display), id.vars=c('year'),variable.name=c('Retail','Mining'))
data.table::melt(df.display, id.vars=c('year'),variable.name=c('Retail','Mining'))
data.table::melt(as.data.table(df.display), id.vars=c('year'),variable.name=c('Retail','Mining'))
df.dispaly %>%
pivot_longer(cols=c('Retail','Mining'),names_to='year',values_to='value')
df.display %>%
pivot_longer(cols=c('Retail','Mining'),names_to='year',values_to='value')
df.display %>%
pivot_longer(cols=c('Retail','Mining'),
names_to='names',
values_to='values')
df.display %>% pivot_longer(cols=c('Retail','Mining'),names_to='names',values_to='values')
plot_ly(data=df.display %>% pivot_longer(cols=c('Retail','Mining'),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
var1 <- variable.unit.converter(df,df.datadict,'retail','day')
var2 <- variable.unit.converter(df,df.datadict,'financial','day')
var1
var2
var1.name
colnames(var1)
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),'Mining')
colnames(df.display) <- c('year',colnames(var1),'Mining')
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),'Mining')
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
var1 <- variable.unit.converter(df,df.datadict,'retail','day')
var2 <- variable.unit.converter(df,df.datadict,'financial','day')
prop1 <- var1/base_var
prop2 <- var2/base_var
colnames(var1)
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),'Mining')
plot_ly(data=df.display %>% pivot_longer(cols=c('Retail','Mining'),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
var1 <- variable.unit.converter(df,df.datadict,'retail','day')
var2 <- variable.unit.converter(df,df.datadict,'financial','day')
prop1 <- var1/base_var
prop2 <- var2/base_var
colnames(var1)
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),'Mining')
df.display
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
df.display
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var <- variable.unit.converter(df,df.datadict,'gasoline','gallon')
var1 <- variable.unit.converter(df,df.datadict,'retail','hour')
var2 <- variable.unit.converter(df,df.datadict,'financial','hour')
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var.name <- 'gasoline'
base_var.unit <- 'gallon'
var1.name <- 'retail'
var1.unit <- 'hour'
var2.name <- 'financial'
var2.unit <- 'hour'
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
var1 <- variable.unit.converter(df,df.datadict,var1.name,var1.unit)
var2 <- variable.unit.converter(df,df.datadict,var2.name,var2.unit)
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var.name <- 'gasoline'
base_var.unit <- 'gallon'
var1.name <- 'retail'
var1.unit <- 'day'
var2.name <- 'financial'
var2.unit <- 'day'
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
var1 <- variable.unit.converter(df,df.datadict,var1.name,var1.unit)
var2 <- variable.unit.converter(df,df.datadict,var2.name,var2.unit)
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var.name <- 'gasoline'
base_var.unit <- 'gallon'
var1.name <- 'retail'
var1.unit <- 'year'
var2.name <- 'financial'
var2.unit <- 'year'
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
var1 <- variable.unit.converter(df,df.datadict,var1.name,var1.unit)
var2 <- variable.unit.converter(df,df.datadict,var2.name,var2.unit)
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var.name <- 'flour'
base_var.unit <- 'pound'
var1.name <- 'retail'
var1.unit <- 'year'
var2.name <- 'financial'
var2.unit <- 'year'
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
var1 <- variable.unit.converter(df,df.datadict,var1.name,var1.unit)
var2 <- variable.unit.converter(df,df.datadict,var2.name,var2.unit)
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var.name <- 'flour'
base_var.unit <- 'pound'
var1.name <- 'retail'
var1.unit <- 'hour'
var2.name <- 'financial'
var2.unit <- 'hour'
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
var1 <- variable.unit.converter(df,df.datadict,var1.name,var1.unit)
var2 <- variable.unit.converter(df,df.datadict,var2.name,var2.unit)
prop1 <- var1/base_var
prop2 <- var2/base_var
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
colnames(df.display) <- c('year',colnames(var1),colnames(var2))
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
for i in vars(
for (i in vars){print(i)}
for (p in vars) {
print(p)
}
print(p[0])
print(p[1])
for (p in vars) {
print(p[1])
}
vars <- c(c('retail','hour')
c('financial','hour')
vars <- c(
c('retail','hour'),
c('financial','hour')
)
vars <- c(
c('retail','hour'),
c('financial','hour')
)
for (p in vars) {
print(p[1])
}
print(p[2])
for (p in vars) {
print(p)
}
vars[1]
vars[2]
vars[3]
vars[4]
length(vars)
var.names <- c('retail','financial')
var.units <- c('hour','hour')
length(vars)
var.names <- c('retail','financial')
var.units <- c('hour','hour')
length(var.names)
for (i in length(var.names)) {
print(p)
}
for (i in length(var.names)) {
print(i)
}
length(var.names)
for (i in 1:length(var.names)) {
print(i)
}
print(var.names[i])
for (i in 1:length(var.names)) {
print(var.names[i])
}
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial')
var.units <- c('hour','hour')
length(var.names)
for (i in 1:length(var.names)) {
print(var.names[i])
}
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df$year,prop))
}
df.display
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
df.display
df.display <- as.data.frame(cbind(df$year,prop1,prop2))
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial')
var.units <- c('hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
colnames(df.display) <- c('year',var.names)
df.display
plot_ly(data=df.display %>% pivot_longer(cols=c(colnames(var1),colnames(var2)),names_to='names',values_to='values'),
x=~year,mode='lines+markers', split= ~names) %>%
add_trace(y = ~values) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop)) %>%
pivot_longer(cols=var.names)
}
colnames(df.display) <- c('year',var.names)
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
}
colnames(df.display) <- c('year',var.names)
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial')
var.units <- c('hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
}
df.display
colnames(df.display) <- c('year',var.names)
c('year',var.names)
colnames(df.display) <- c('year',var.names)
c('year',var.names)
colnames(df.display) <- c('year',c(var.names))
colnames(df.display) <- c('year',var.names)
c('year',var.names)
test <- c('year',var.names)
test
colnames(df.display) <- test
test <- c('year',var.names)
test
length(test)
df.display
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
}
df.display
colnames(df.display) <- c('year',var.names)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
colnames(df.display) <- c('year',var.names)
df.display
df.display <- df.display %>% pivot_longer(cols=var.names)
df.display
plot_ly(data=df.display %>% ,names_to='names',values_to='values'),
plot_ly(data=df.display,names_to='names',values_to='values'),
df.display <- df.display %>% pivot_longer(cols=var.names,names_to='names',values_to='values')
df.display
plot_ly(data=df.display),
df.display <- df.display %>% pivot_longer(cols=var.names)
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial')
var.units <- c('hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
colnames(df.display) <- c('year',var.names)
df.display <- df.display %>% pivot_longer(cols=var.names)
df.display
plot_ly(data=df.display),
plot_ly(data=df.display,
x=~year,mode='lines+markers', split= ~name) %>%
add_trace(y = ~value) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial','mining')
var.units <- c('hour','hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial','mining')
var.units <- c('hour','hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
df.display
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
for (i in 1:length(var.names)) {
print(i)
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
var.names
df.display
#v2
base_var.name <- 'flour'
base_var.unit <- 'pound'
var.names <- c('retail','financial','mining')
var.units <- c('hour','hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
length(var.names)
for (i in 1:length(var.names)) {
print(i)
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
df.display
df
var.names <- c('retail','financial','mining_logging_wages')
var.units <- c('hour','hour','hour')
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
print(i)
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
colnames(df.display) <- c('year',var.names)
df.display <- df.display %>% pivot_longer(cols=var.names)
plot_ly(data=df.display,
x=~year,mode='lines+markers', split= ~name) %>%
add_trace(y = ~value) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
base_var_scatterplot <- function(df,df.datadict,base_var.name,base_var.unit,var.names,var.units) {
base_var <- variable.unit.converter(df,df.datadict,base_var.name,base_var.unit)
df.display <- as.data.frame(df$year)
for (i in 1:length(var.names)) {
var <- variable.unit.converter(df,df.datadict,var.names[i],var.units[i])
prop <- var/base_var
df.display <- as.data.frame(cbind(df.display,prop))
}
colnames(df.display) <- c('year',var.names)
df.display <- df.display %>% pivot_longer(cols=var.names)
plot_ly(data=df.display,
x=~year,mode='lines+markers', split= ~name) %>%
add_trace(y = ~value) %>%
layout(legend=list(title=list(text='Variables')),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Gallons of Gasoline per Hour'))
}
base_var_scatterplot(df,df.datadict,base_var.name,base_var.unit,var.names,var.units)
